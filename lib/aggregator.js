// Generated by CoffeeScript 1.8.0
(function() {
  var Aggregator, max, min, sum;

  sum = function(values) {
    return values.reduce(function(a, b) {
      return a + b;
    });
  };

  max = function(values) {
    return values.reduce(function(a, b) {
      return Math.max(a, b);
    });
  };

  min = function(values) {
    return values.reduce(function(a, b) {
      return Math.min(a, b);
    });
  };

  Aggregator = (function() {
    function Aggregator() {
      this.cache = {};
    }

    Aggregator.prototype.flushTo = function(queue) {
      var name, values, _ref, _results;
      _ref = this.cache;
      _results = [];
      for (name in _ref) {
        values = _ref[name];
        values.sort();
        queue.push({
          name: name,
          count: values.length,
          sum: sum(values),
          max: max(values),
          min: min(values),
          sum_squares: sum(values.map(function(value) {
            return Math.pow(value, 2);
          }))
        });
        _results.push(delete this.cache[name]);
      }
      return _results;
    };

    Aggregator.prototype.timing = function(name, value) {
      var _base;
      return ((_base = this.cache)[name] != null ? _base[name] : _base[name] = []).push(value);
    };

    return Aggregator;

  })();

  module.exports = Aggregator;

}).call(this);

//# sourceMappingURL=aggregator.js.map
